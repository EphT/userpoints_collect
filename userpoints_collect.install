<?php

/**
 * @file
 * Install / Uninstall userpoints_collect Schema.
 */


/**
 * Implements hook_schema().
 */
function userpoints_collect_schema() {
  $schema['userpoints_collect_restrictions'] = array(
    'description' => 'Holds restriction information for userpoints collect',
    'fields' => array(
      'rid' => array(
        'description' => 'Restriction ID',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type of restriction',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'tid' => array(
        'description' => 'The Category ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Status',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' =>  array('rid'),
    'indexes' => array(
      'tid' => array('tid'),
    ),
  );

  $schema['userpoints_collect_restrictions_interval'] = array(
    'description' => 'Holds restriction interval information for userpoints collect',
    'fields' => array(
      'rid' => array(
        'description' => 'Restriction ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'start' => array(
        'description' => 'Start Timestamp',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'end' => array(
        'description' => 'End Timestamp',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'length' => array(
        'description' => 'Length',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'rid' => array('rid'),
    ),
  );

  $schema['userpoints_collect_restrictions_series'] = array(
    'description' => 'Holds restriction series information for userpoints collect',
    'fields' => array(
      'sid' => array(
        'description' => 'Timestamp ID',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'rid' => array(
        'description' => 'Restriction ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'timestamp' => array(
        'description' => 'Timestamp',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Status',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
    ),
    'primary key' =>  array('sid'),
    'indexes' => array(
      'rid' => array('rid'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function userpoints_collect_uninstall() {
  db_delete('variable')
    ->condition('name', 'userpoints_collect_%', 'LIKE')
    ->execute();

  $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE module = 'userpoints_collect'")->fetchField();
  if ( $vid && function_exists('taxonomy_vocabulary_delete') ) {
    taxonomy_vocabulary_delete($vid);
  }
}
